{
    "compilerOptions": {
        "target": "es2021" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
        "lib": ["es2021"],
        "jsx": "react",
        /* Modules */
        "module": "es2022" /* Specify what module code is generated. */,
        // "rootDir": "./",                                  /* Specify the root folder within your source files. */
        "moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,
        // "baseUrl": "./",                                  /* Specify the base directory to resolve non-relative module names. */
        // "paths": {},                                      /* Specify a set of entries that re-map imports to additional lookup locations. */
        // "rootDirs": [],                                   /* Allow multiple folders to be treated as one when resolving modules. */
        // "typeRoots": [],                                  /* Specify multiple folders that act like `./node_modules/@types`. */
        "types": [
            "@cloudflare/workers-types"
        ] /* Specify type package names to be included without being referenced in a source file. */,
        // "allowUmdGlobalAccess": true,                     /* Allow accessing UMD globals from modules. */
        "resolveJsonModule": true /* Enable importing .json files */,
        // "noResolve": true,                                /* Disallow `import`s, `require`s or `<reference>`s from expanding the number of files TypeScript should add to a project. */

        /* JavaScript Support */
        "allowJs": true /* Allow JavaScript files to be a part of your program. Use the `checkJS` option to get errors from these files. */,
        "checkJs": false /* Enable error reporting in type-checked JavaScript files. */,

        "noEmit": true /* Disable emitting files from a compilation. */,

        /* Interop Constraints */
        "isolatedModules": true /* Ensure that each file can be safely transpiled without relying on other imports. */,
        "allowSyntheticDefaultImports": true /* Allow 'import x from y' when a module doesn't have a default export. */,
        // "preserveSymlinks": true,                         /* Disable resolving symlinks to their realpath. This correlates to the same flag in node. */
        "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

        /* Type Checking */
        "strict": true /* Enable all strict type-checking options. */,
        "skipLibCheck": true /* Skip type checking all .d.ts files. */
    }
}
